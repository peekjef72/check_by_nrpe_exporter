# Global defaults.
global:
  scrape_timeout: 10s
  max_content_length: 16384
  # default values
  # httpd:
  #   pages_path: pages
  #   pages_uri: /html
  #   api_url: /api

pollers:
  # connect to distant nrpe_exporter trough pushproxy on port 9101
  poller1:
    host: poller1.myhost.domain
    proxy: http://poller1.myhost.domain:9101
  poller2:
    host: poller1.myhost.domain2
  poller3:
    host: poller1.myhost.domain3
    port: 9276

checks:
  custom:
    command: check_threshold
    command_line: "-s {{ .custom_check }} -m {{ .parameters }} -b"
    params:
      - name: custom_check
        display: check script
        help: "custom script to play"
        mandatory: true
      - name: parameters
        default: ""
        encode: base64

  filesystem:
    command: check_disk
        # -X binfmt_misc -X devpts -X devtmpfs -X none -X proc -X procfs -X rpc_pipefs -X sysfs -X tmpfs -X overlay -X debugfs -X tracefs -X autofs -X cgroup --errors-only $_SERVICEA_OPTPARAMS$ -t $_SERVICEA_TIMEOUT_CMD$ -w $_SERVICEWARNING$% -c $_SERVICECRITICAL$% --all --local -i /.snapshot/
        # -X none -X proc -X procfs -X tmpfs -X autofs -X ahafs --errors-only $_SERVICEA_OPTPARAMS$ -t $_SERVICEA_TIMEOUT_CMD$ -w $_SERVICEWARNING$% -c $_SERVICECRITICAL$% --all --local -i /.snapshot/'
    command_line: "
      -X binfmt_misc -X devpts -X devtmpfs -X none -X proc -X procfs -X rpc_pipefs 
      -X sysfs -X tmpfs -X overlay -X debugfs -X tracefs -X autofs -X cgroup 
      --errors-only {{ .options }} -t {{ .timeout }} -w {{ .perc_threshold_warn }} -c {{ .perc_threshold_crit }} --all --local -i /.snapshot/"
    params:
      - name: perc_threshold_warn
        display: warn threshold
        help: warning free space thresdhold; if free bytes are less or egal to threshold, WARNING state is raised
        default: 5
        mandatory: true
        type: number
      - name: perc_threshold_crit
        display: critical threshold
        help: critical free space threshold; if free bytes are less or egal to threshold, CRITICAL state is raised
        default: 3
        mandatory: true
        type: number
      - name: timeout
        default: 5
        type: number
        mandatory: true
        help: timeout in second for the remote command to execute
      - name: options
        default: ""

  filesystemre:
    command: check_disk
    command_line: "--errors-only {{ .options }} -t {{ .timeout }} -w {{ .perc_threshold_warn }} -c {{ .perc_threshold_crit }} --ereg-path={{ .ereg_path }}"
    params:
      - name: ereg_path
        mandatory: true
      - name: perc_threshold_warn
        display: warn threshold
        help: warning free space thresdhold; if free bytes are less or egal to threshold, WARNING state is raised
        mandatory: true
        type: number
      - name: perc_threshold_crit
        display: critical threshold
        help: critical free space threshold; if free bytes are less or egal to threshold, CRITICAL state is raised
        mandatory: true
        type: number
      - name: timeout
        default: 5
        type: number
        type: number
        mandatory: true
        help: timeout in second for the remote command to execute
      - name: options
        default: ""

  log:
    command: check_log
    command_line: "-l {{ .logfilepath }} --allow_missing -o _ -k {{ .ko_pattern }} -b"
    params:
      - name: logfilepath
        mandatory: true
      - name: ko_pattern
        help: "regexp pattern to match against each read line"
        mandatory: true
        encode: base64

  process:
    command: check_procs
    command_line: "-c {{ .min_count }}:{{ .max_count }} --ereg-argument-array=\"{{ .process }}\""
    params:
      - name: process
        mandatory: true
        help: regexp pattern that will be compared to the whole command line (command + args)
      - name: min_count
        display: min count
        help: minimum number of process; if count is less than this number, the check is in CRITICAL state
        mandatory: false
        default: 1
        type: number
      - name: max_count
        mandatory: false
        default: ""
        type: number
        display: max count
        help: maximum number of process; if count is greater or egal than this number, the check is in CRITICAL state

  service:
    command: check_service
    command_line: "-s {{ .service }}"
    params:
      - name: service
        mandatory: true

  service-list:
    command: check_service
    command_line: "-l"

  url:
    command: check_http
    command_line: "-H {{ .hostname }} -p {{ .port }} -u {{ .url }} {{ .options }} --ereg=\"{{ .reg_match }}\""
    params:
      - name: hostname
        mandatory: true
      - name: port
        mandatory: true
        default: 80
        type: number
      - name: url
        mandatory: true
        default: /
      - name: options
        mandatory: false
        default: ""
      - name: reg_match
        mandatory: false
        default: ".*"

  version:
    command: _NRPE_CHECK